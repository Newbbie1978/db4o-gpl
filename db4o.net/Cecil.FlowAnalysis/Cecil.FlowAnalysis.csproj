<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
    </PropertyGroup>
    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <DefineConstants>TRACE;</DefineConstants>
        <OutputPath>..\Output\</OutputPath>
    </PropertyGroup>
    
  <ItemGroup>
    <Compile Include="ActionFlow\AbstractFallThroughActionBlock.cs" />
    <Compile Include="ActionFlow\ActionBlock.cs" />
    <Compile Include="ActionFlow\ActionFlowGraph.cs" />
    <Compile Include="ActionFlow\ActionFlowGraphBuilder.cs" />
    <Compile Include="ActionFlow\ActionType.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ActionFlow\AssignActionBlock.cs" />
    <Compile Include="ActionFlow\BranchActionBlock.cs" />
    <Compile Include="ActionFlow\ConditionalBranchActionBlock.cs" />
    <Compile Include="ActionFlow\ExpressionDecompiler.cs" />
    <Compile Include="ActionFlow\InvokeActionBlock.cs" />
    <Compile Include="ActionFlow\ReturnActionBlock.cs" />
    <Compile Include="AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\AbstractCodeStructureVisitor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\ArgumentReferenceExpression.cs" />
    <Compile Include="CodeStructure\AssignExpression.cs" />
    <Compile Include="CodeStructure\BinaryExpression.cs" />
    <Compile Include="CodeStructure\BinaryOperator.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\BlockStatement.cs" />
    <Compile Include="CodeStructure\CastExpression.cs" />
    <Compile Include="CodeStructure\CodeElementType.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\Expression.cs" />
    <Compile Include="CodeStructure\ExpressionPrinter.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\FieldReferenceExpression.cs" />
    <Compile Include="CodeStructure\ICodeElement.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\ICodeStructureVisitor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\LiteralExpression.cs" />
    <Compile Include="CodeStructure\MethodInvocationExpression.cs" />
    <Compile Include="CodeStructure\MethodReferenceExpression.cs" />
    <Compile Include="CodeStructure\PropertyReferenceExpression.cs" />
    <Compile Include="CodeStructure\ReturnStatement.cs" />
    <Compile Include="CodeStructure\Statement.cs" />
    <Compile Include="CodeStructure\ThisReferenceExpression.cs" />
    <Compile Include="CodeStructure\TryCastExpression.cs" />
    <Compile Include="CodeStructure\UnaryExpression.cs" />
    <Compile Include="CodeStructure\UnaryOperator.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="CodeStructure\VariableReferenceExpression.cs" />
    <Compile Include="ControlFlow\ControlFlowGraph.cs" />
    <Compile Include="ControlFlow\ControlFlowGraphBuilder.cs" />
    <Compile Include="ControlFlow\InstructionBlock.cs" />
    <Compile Include="ControlFlow\InstructionData.cs" />
    <Compile Include="FlowGraphFactory.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Utilities\AbstractInstructionVisitor.cs" />
    <Compile Include="Utilities\Formatter.cs" />
    <Compile Include="Utilities\IInstructionVisitor.cs" />
    <Compile Include="Utilities\InstructionDispatcher.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Mono.Cecil\Mono.Cecil.csproj" />
  </ItemGroup>
</Project>